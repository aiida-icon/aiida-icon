[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [
  {name = "Rico HÃ¤uselmann", email = "rico.haeuselmann@gmail.com"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Framework :: AiiDA"
]
dependencies = ["aiida-core>=2.5", "click", "f90nml"]
description = 'AiiDA Plugin to run simulations with the ICON weather & climate model'
dynamic = ["version"]
keywords = []
license = "MIT"
name = "aiida-icon"
readme = "README.md"
requires-python = ">=3.10"

[project.entry-points."aiida.calculations"]
"icon.icon" = "aiida_icon.calculations:IconCalculation"

[project.entry-points."aiida.parsers"]
"icon.icon" = "aiida_icon.calculations:IconParser"

[project.urls]
Documentation = "https://aiida-icon.github.io/aiida-icon/"
Issues = "https://github.com/DropD/aiida-icon/issues"
Source = "https://github.com/DropD/aiida-icon"

[tool.coverage.paths]
aiida_icon = ["src/aiida_icon", "*/aiida-icon/src/aiida_icon"]
tests = ["tests", "*/aiida-icon/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]

[tool.coverage.run]
branch = true
omit = [
  "src/aiida_icon/_version.py"
]
parallel = true
source_pkgs = ["aiida_icon", "tests"]

[tool.hatch.build.hooks.vcs]
version-file = "src/aiida_icon/_version.py"

[tool.hatch.envs.cscs-ci]
extra-dependencies = [
  "aiida-firecrest@git+https://github.com/aiidateam/aiida-firecrest@e68b3200ad60b1ea525c9c0a76adffe6c3a932e8",
  "pyfirecrest@git+https://github.com/eth-cscs/pyfirecrest@933d1c50e11e1f3049ec9a7799cbc598e426949d",
  "pytest"
]
installer = "uv"
python = "3.12"

[tool.hatch.envs.cscs-ci.scripts]
test = "pytest -m cscsci -s"

[tool.hatch.envs.default]
dependencies = ["aiida-core==2.7.1", "click==8.1.8", "f90nml==1.4.5"]
installer = "uv"

[tool.hatch.envs.docs]
extra-dependencies = [
  "mkdocs",
  "mkdocs-material"
]

[tool.hatch.envs.hatch-test]
default-args = ["-m", "not requires_icon and not cscsci"]
extra-args = ["-m", "not requires_icon and not cscsci"]
extra-dependencies = [
  "aiida-testing-dev",
  "aiida-core==2.7.1",
  "click==8.1.8",
  "f90nml==1.4.5"
]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
  "pytest",
  "aiida-testing-dev",
  "types-requests"
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/aiida_icon tests}"

[tool.hatch.version]
source = "vcs"

[tool.mypy]
exclude = ['^examples/.*']

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "f90nml"

[tool.pyright]
executionEnvironments = [{root = "src"}]
venv = "types"
venvPath = "$(hatch env find)"

[tool.pytest.ini_options]
addopts = ["--doctest-modules"]
markers = [
  "requires_icon: marks test to require icon installation",
  "cscsci: tests that are only supposed to run in CSCS-CI"
]
testpaths = ["tests", "src"]

[tool.ruff]
exclude = ["examples", ".spack*"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*" = ["ARG001"]
