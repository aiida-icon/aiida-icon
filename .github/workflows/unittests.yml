name: unittests

on:
  push:
    branches: [main]
  pull_request:
    # always

permissions: {}

jobs:
  unittests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        aiida-version: ['stable']
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_aiida
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
      rabbitmq:
        image: rabbitmq:4.1.2
        ports:
        - 5672:5672
    environment: testing

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python-version}}

    - name: install Python dependencies
      run: |
        pip install --upgrade pip 
        pip install hatch

    - name: run unittests
      run: hatch test -py ${{matrix.python-version}} -n auto -v
