[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Rico HÃ¤uselmann", email = "rico.haeuselmann@gmail.com"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython"
]
dependencies = ["aiida-core>=2.5", "click", "f90nml"]
description = 'AiiDA Plugin to run simulations with the ICON weather & climate model'
dynamic = ["version"]
keywords = []
license = "MIT"
name = "aiida-icon"
readme = "README.md"
requires-python = ">=3.12"

[project.entry-points."aiida.calculations"]
"aiida_icon.icon" = "aiida_icon.calculations:IconCalculation"
"icon.icon" = "aiida_icon.calculations:IconCalculation"

[project.entry-points."aiida.parsers"]
"aiida_icon.icon" = "aiida_icon.calculations:IconParser"
"icon.icon" = "aiida_icon.calculations:IconParser"

[project.urls]
Documentation = "https://github.com/DropD/aiida-icon#readme"
Issues = "https://github.com/DropD/aiida-icon/issues"
Source = "https://github.com/DropD/aiida-icon"

[tool.coverage.paths]
aiida_icon = ["src/aiida_icon", "*/aiida-icon/src/aiida_icon"]
tests = ["tests", "*/aiida-icon/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]

[tool.coverage.run]
branch = true
omit = [
  "src/aiida_icon/__about__.py"
]
parallel = true
source_pkgs = ["aiida_icon", "tests"]

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "aiida-testing-dev"
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
  "pytest",
  "aiida-testing-dev"
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/aiida_icon tests}"

[tool.hatch.version]
path = "src/aiida_icon/__about__.py"

[tool.mypy]
exclude = ['^examples/.*']

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "f90nml"

[tool.ruff]
exclude = ["examples"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*" = ["ARG001"]
